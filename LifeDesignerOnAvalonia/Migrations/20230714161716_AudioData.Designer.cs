// <auto-generated />
using LifeDesignerOnAvalonia.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LifeDesignerOnAvalonia.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230714161716_AudioData")]
    partial class AudioData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.AudioData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Audio")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("IdCategory")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdUser");

                    b.ToTable("AudioData");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCategory")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdUser");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.AudioData", b =>
                {
                    b.HasOne("LifeDesignerOnAvalonia.Models.Category", "Category")
                        .WithMany("AudioDatas")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LifeDesignerOnAvalonia.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.Category", b =>
                {
                    b.HasOne("LifeDesignerOnAvalonia.Models.UserLogin", "UserLogin")
                        .WithMany("Categorys")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.Data", b =>
                {
                    b.HasOne("LifeDesignerOnAvalonia.Models.Category", "Category")
                        .WithMany("Datas")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LifeDesignerOnAvalonia.Models.UserLogin", "UserLogin")
                        .WithMany("Datas")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.Category", b =>
                {
                    b.Navigation("AudioDatas");

                    b.Navigation("Datas");
                });

            modelBuilder.Entity("LifeDesignerOnAvalonia.Models.UserLogin", b =>
                {
                    b.Navigation("Categorys");

                    b.Navigation("Datas");
                });
#pragma warning restore 612, 618
        }
    }
}
